name: HealthLeap CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: healthleap_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run lint
      run: npm run lint || echo "Linting skipped"
      
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm run test:integration || echo "Integration tests skipped"
      
    - name: Run API tests
      run: npm run test:api || echo "API tests skipped"
    
    - name: Generate test reports
      run: npm run test:report || echo "Report generation skipped"
      if: always()
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: reports/
        if-no-files-found: ignore

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: always()
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info

  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectKey=healthleap-monolith
          -Dsonar.projectName=HealthLeap-MONOLITH
          -Dsonar.sources=src
          -Dsonar.tests=tests
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
          
  generate-report:
    needs: test
    runs-on: ubuntu-latest
    if: always() && github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v4
    
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-results
        path: allure-results
    
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: hashFiles('allure-results/*') != ''
      with:
        allure_results: allure-results
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 20
    
    - name: Publish Allure Report
      uses: peaceiris/actions-gh-pages@v3
      if: hashFiles('allure-report/*') != ''
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        publish_branch: gh-pages
        keep_files: true
